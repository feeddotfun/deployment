name: Deploy to Server

on:
  push:
    branches: [ master ]
  repository_dispatch:
    types: [feed-app-update, news-meme-ai-update] 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Update submodules
        if: github.event_name == 'repository_dispatch'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git submodule update --remote --recursive
          git add .
          git commit -m "Update submodules" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.DO_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

      - name: Create ENV files
        env:
          FEED_APP_ENV: ${{ secrets.FEED_APP_ENV }}
          NEWS_MEME_AI_ENV: ${{ secrets.NEWS_MEME_AI_ENV }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          mkdir -p services/feed_app
          mkdir -p services/news_meme_ai
          echo "$FEED_APP_ENV" > services/feed_app/.env.production
          echo "$NEWS_MEME_AI_ENV" > services/news_meme_ai/.env.production
          export MONGODB_URI=$MONGODB_URI

      - name: Deploy to Digital Ocean
        env:
          SERVER_HOST: ${{ secrets.DO_HOST }}
          SERVER_USER: ${{ secrets.DO_USER }}
        run: |
          ssh $SERVER_USER@$SERVER_HOST 'bash -s' << 'ENDSSH'
            mkdir -p ~/deployment
            cd ~/deployment
            
            if [ -d ".git" ]; then
              git fetch --all
              git reset --hard origin/master
              git submodule update --init --recursive
            else
              git clone --recursive https://github.com/feeddotfun/deployment.git .
            fi
          ENDSSH

          scp services/feed_app/.env.production $SERVER_USER@$SERVER_HOST:~/deployment/services/feed_app/.env.production
          scp services/news_meme_ai/.env.production $SERVER_USER@$SERVER_HOST:~/deployment/services/news_meme_ai/.env.production

          ssh $SERVER_USER@$SERVER_HOST 'bash -s' << 'ENDSSH'
            cd ~/deployment
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d --build
            docker image prune -f
          ENDSSH